package pentest;

import java.util.*;

/**
 * User: 兴希
 * Date: 2020/8/2
 * Time: 20:08
 * Description: No Description
 */
public class Main3 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int t = scanner.nextInt();
//        int[][] lunch = new int[n][2];
//        int[][] dinner = new int[m][2];
        PriorityQueue<int[]> lunch = new PriorityQueue<>(Comparator.comparingInt(o -> o[0]));
        PriorityQueue<int[]> dinner = new PriorityQueue<>(Comparator.comparingInt(o -> o[0]));
        int min = Integer.MAX_VALUE/2;
        for (int i=0;i<n;i++){
            int[] tmp = new int[2];
            tmp[0] = scanner.nextInt();
            tmp[1] = scanner.nextInt();
            if (tmp[1]>=t){
                min = Math.min(min,tmp[0]);
            }
            lunch.offer(tmp);
        }
        for (int i=0;i<m;i++){
            int[] tmp = new int[2];
            tmp[0] = scanner.nextInt();
            tmp[1] = scanner.nextInt();
            if (tmp[1]>=t){
                min = Math.min(min,tmp[0]);
            }
            dinner.offer(tmp);
        }
        if (t==0){
            System.out.println(0);
            return;
        }
        int minHeat = getMinHeat(n, m, t, lunch, dinner, min);
        System.out.println(minHeat);

    }

    private static int getMinHeat(int n, int m, int t, PriorityQueue<int[]> lunch, PriorityQueue<int[]> dinner, int min){
//        int min = Integer.MAX_VALUE/2;
//        for (int i=0;i<=t;i++){
//            if (i==0){
//                min = Math.min(getHeat(m,t-i,dinner),min);
//            }else if (i==t){
//                min = Math.min(getHeat(n,i,lunch),min);
//            }else {
//                min = Math.min(min,getHeat(m,t-i,dinner)+getHeat(n,i,lunch));
//            }
//        }
//        if (min>=Integer.MAX_VALUE/2){
//            return -1;
//        }
//        int[][] dp = new int[n+1][m+1];
//        for (int arr[]:lunch){
//            if ()
//        }
//        for (int i=0;i<n;i++){
//            for (int j=0;j<m;j++){
//                if (lunch+dinner[j][1]>=t){
//                    min = Math.min(min,lunch[i][0]+dinner[j][0]);
//                }
//            }
//        }
        while (!lunch.isEmpty()){
            int[] poll = lunch.poll();
            if (poll!=null){
                PriorityQueue<int[]> tmp = new PriorityQueue<>(dinner);
                while (!tmp.isEmpty()){
                    int[] poll1 = dinner.poll();
                    if (poll1!=null){
                        if (poll[1]+poll1[1]>=t){
                            min = Math.min(poll[0]+poll1[0],min);
                            break;
                        }
                    }
                }
            }
        }
        if (min>=Integer.MAX_VALUE/2){
            return -1;
        }
        return min;
    }

    private static int getHeat(int m, int t, int[][] nums){
        int min = Integer.MAX_VALUE/2;
        for (int i=0;i<m;i++){
            if (nums[i][1]>=t){
                min = Math.min(min,nums[i][0]);
            }
        }
        return min;
    }
}
